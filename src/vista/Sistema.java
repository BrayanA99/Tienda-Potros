/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

// Bibliotecas necesarias
import com.sun.glass.events.KeyEvent;
//import java.awt.Image;
import java.util.Date;
import com.itextpdf.text.*;
import com.itextpdf.text.Image;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.Barcode39;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.sql.*;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
//Excel
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.ClientAnchor;
import org.apache.poi.ss.usermodel.CreationHelper;
import org.apache.poi.ss.usermodel.Drawing;
import org.apache.poi.ss.usermodel.FillPatternType;
//import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Picture;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.util.IOUtils;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/*Generar Imagen codigo barras*/
import jbarcodebean.*;
import net.sourceforge.jbarcodebean.model.Interleaved25;
import java.awt.image.BufferedImage;
import javax.swing.ImageIcon;
/**
 *
 * @author Brayan
 */

public class Sistema extends javax.swing.JFrame {
    
    public static final String URL = "jdbc:mysql://localhost:3306/Potro";
    public static final String USERNAME = "root";
    public static final String PASSWORD = "";
    public static BufferedImage picture = null;
    
    PreparedStatement ps;
    ResultSet rs;
    int item;
    double totalPagar=0.00;
    /*
    fucnion que nos ayuda a la coneccin a la base de datos
    */
    public static Connection getConection(){
        Connection con = null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection(URL, USERNAME, PASSWORD);
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println(e);
        }
        return con;
    }
    public Sistema(){
       initComponents();
       this.setTitle("Sistema Principal");
    }
    /*
        Constructor que valida el usuario y asigna privilegios
    */
    public Sistema(String priv){
        //System.out.println(priv.getRes());
        initComponents();
        this.setTitle("Sistema Principal");
        this.setExtendedState(MAXIMIZED_BOTH);//Que abarque todo la pantalla
        this.setLocationRelativeTo(null);
        if(priv.equals("Asistente")){
            btnInventario.setEnabled(false);
            btnGestion.setEnabled(false);
            btnRegistrarUsuario.setEnabled(false);
            btnReporteVenta.setEnabled(false);
            Proveedor.setEnabled(false);
        }else if(priv.equals("AsistenteM")){
            btnRegistrarUsuario.setEnabled(false);
            btnGestion.setEnabled(false);
            
        }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /*
    Limpia los texto en el panel Inventario
    */
    private void limpiarCaja(){
        //num.setText(null);
        art.setText(null);
        cod.setText(null);
        tot.setText(null);
        iba.setText(null);
        precio.setText(null);
        //totalv.setText(null);
        Prov.setText(null);
    }
    public void limpiarVenta(){
        codigoVenta.setText(null);
        productoVenta.setText(null);
        cantidadVenta.setText(null);
        precioVenta.setText(null);
    }
    /*
    Guarda el articulo en el panel inventario
    */
    private void Guardar() throws SQLException{
        Connection con = null;
        try {
            con = getConection();    
            ps = con.prepareStatement("insert into Inventario (Articulo, Codigo, TotalArt, CostoSinIva, PrecioVenta, TotalVen, Prov) values (?,?, ?, ?, ?, ?, ? )");
            //ps.setString(1, null);
            ps.setString(1, art.getText());
            ps.setString(2, cod.getText());
            ps.setInt(3, Integer.parseInt(tot.getText()));
            ps.setString(4, iba.getText());
            ps.setString(5, precio.getText());
            ps.setString(6, null);
            ps.setString(7, Prov.getText());
            int res = ps.executeUpdate();
            if (res > 0) {
                JOptionPane.showMessageDialog(null, "El Articulo se registro con Ã©xito!");
                limpiarCaja();
            }else{
               JOptionPane.showMessageDialog(null, "Hubo un error al guardar!");       
            }
            con.close();          
        } catch (HeadlessException | NumberFormatException | SQLException e) {
            System.err.println(e);
        }
    }
    /*
    Elimina el articulo del panel Inventario por medio del codigo
    */
    public void Eliminar(){
        Connection con = null;
        try {
            con = getConection();
            
            ps = con.prepareStatement("delete from Inventario where Codigo = ?");
            ps.setString(1, cod.getText());
            int res = ps.executeUpdate();
            if (res > 0) {
              JOptionPane.showMessageDialog(null, "Se elimino el Articulo con clave: "+cod.getText() + " de forma exitosa!"); 
              limpiarCaja();
            }else{
                JOptionPane.showMessageDialog(null, "Hubo un error al eliminar!"); 
            }
            con.close();    
        } catch (HeadlessException | SQLException e) {
            System.err.println(e);
        }
    }
    /*
    Boton Buscar de Inventario
    */
    public void Buscar(){
        Connection con = null;
        try {
            con = getConection();
            ps = con.prepareStatement("select * from Inventario where Codigo = ?");
            ps.setString(1, cod.getText());
    
            rs = ps.executeQuery();      
            if (rs.next() ) {
              //num.setText(rs.getString("No"));
              art.setText(rs.getString("Articulo"));
              cod.setText(rs.getString("Codigo"));
              tot.setText(rs.getString("TotalArt"));
              iba.setText(rs.getString("CostoSinIva"));
              precio.setText(rs.getString("PrecioVenta"));
              //totalv.setText(Integer.toString(rs.getInt("TotalVen")));
              Prov.setText(rs.getString("Prov"));
              Barcode39 code =new Barcode39();
              code.setCode(rs.getString("Codigo"));
              //Image img = code.createImageWithBarcode(pdf.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
              
            }else{
                JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
            }
            con.close();
        } catch (HeadlessException | SQLException e) {
        }
    }
    /*
    Boton Actualizar en el panel Inventario
    */
    public void Actualizar() throws SQLException{
        Connection con = null;
        try{
            con = getConection();
            ps = con.prepareStatement("UPDATE Inventario SET  Articulo=?, Codigo=?, TotalArt=?, CostoSinIva=?, PrecioVenta=?, TotalVen=?, Prov=? WHERE Codigo=?");
            //ps.setString(1, null);
            ps.setString(1, art.getText());
            ps.setString(2, cod.getText());
            ps.setInt(3, Integer.parseInt(tot.getText()));
            ps.setString(4, iba.getText());
            ps.setString(5, precio.getText());
            ps.setString(6, null);
            ps.setString(7, Prov.getText());
            ps.setString(8, cod.getText());
            int res = ps.executeUpdate();
            if(res>0){
                JOptionPane.showMessageDialog(null, "Articulo modificado"); //Empleado modificado
                limpiarCaja();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al Modificar articulo");
                limpiarCaja();
            }
        con.close();
        }
        
        catch (HeadlessException | NumberFormatException | SQLException e) {
            System.err.println(e);
        }
    }
    /*
    Boton Comprar en el panel nueva Venta
    */
    public void GuardarVenta() throws SQLException{
        LocalTime hora = LocalTime.now();
        //System.out.println(hora);
        LocalDate fecha = LocalDate.now();
        //System.out.println(fecha);
        String forma = formapago.getSelectedItem().toString();
        for(int i = 0; i < tablaVenta.getRowCount(); i++){
            String cd = tablaVenta.getValueAt(i, 0).toString();
            String pro = tablaVenta.getValueAt(i, 1).toString();
            int can =Integer.parseInt(tablaVenta.getValueAt(i, 2).toString());
            double pre = Double.parseDouble(tablaVenta.getValueAt(i, 3).toString());
            Connection con = null;
            try {
                con = getConection();    
                ps = con.prepareStatement("insert into Ventas (Codigo, Producto, Cantidad, Precio, FormaPago,Fecha_Venta,Hora_Venta) values (?,?,?,?, ?, ?, ?)");
                ps.setString(1, cd);
                ps.setString(2, pro);
                ps.setInt(3, can);
                ps.setDouble(4, pre);
                ps.setString(5, forma);
                ps.setString(6,fecha.toString());
                ps.setString(7, hora.toString());
                //ps.setString(5,((JTextField)Date.getDateEditor().getUiComponent()).getText());
                int res = ps.executeUpdate();
                if (res > 0) {
                    limpiarCaja();
                }else{
                   JOptionPane.showMessageDialog(null, "Hubo un error al guardar!");       
                }
                con.close();          
            } catch (HeadlessException | SQLException e) {
                System.err.println(e);
            }
        }
        JOptionPane.showMessageDialog(null, "La venta se registro con Ã©xito!");
    }
    /*
    Lista todos los articulos del inventario
    */
    public void btnGestion(){
        Connection con = null;
        Inventario.setSelectedIndex(3);
        try{
            con = getConection();
            DefaultTableModel modelo = new DefaultTableModel();
            gtProductos.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            String sql = "Select No, Articulo, Codigo, TotalArt, CostoSinIva, PrecioVenta, TotalVen FROM Inventario";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadColumnas = rsMD.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Articulo");
            modelo.addColumn("Codigo");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Costo sin Iva");
            modelo.addColumn("Precio Venta");
            modelo.addColumn("Total Venta");
            while(rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                
                
                for(int i=0; i< cantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1) ; 
                }
                modelo.addRow(filas);
            }
            
        } catch( SQLException ex){
            System.err.println(ex.toString());
     }  
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl1 = new javax.swing.JPanel();
        btnventa = new javax.swing.JButton();
        btnInventario = new javax.swing.JButton();
        btnVentas = new javax.swing.JButton();
        btnGestion = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnRegistrarUsuario = new javax.swing.JButton();
        btnReporteVenta = new javax.swing.JButton();
        Proveedor = new javax.swing.JButton();
        PictureD = new javax.swing.JLabel();
        Inventario = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        codigoVenta = new javax.swing.JTextField();
        productoVenta = new javax.swing.JTextField();
        cantidadVenta = new javax.swing.JTextField();
        precioVenta = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaVenta = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        totalVenta = new javax.swing.JTextField();
        btnComprar = new javax.swing.JButton();
        btnAgregarTablaVenta = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        stockVenta = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        DineroR = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        formapago = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        art = new javax.swing.JTextField();
        cod = new javax.swing.JTextField();
        tot = new javax.swing.JTextField();
        iba = new javax.swing.JTextField();
        precio = new javax.swing.JTextField();
        btnGuardarInventario = new javax.swing.JButton();
        btnEliminarInventario = new javax.swing.JButton();
        btnBuscarInventario = new javax.swing.JButton();
        btnActualizarInventario = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        Prov = new javax.swing.JTextField();
        btnGcodigo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblprueba = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtventas = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        codigoArticulo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        articuloA = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cantidadArticulo = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        costoArticulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        gtProductos = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        precioArticulo = new javax.swing.JTextField();
        eliminarArticulo = new javax.swing.JButton();
        buscarArticulo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        totalArticulo = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaReprotes = new javax.swing.JTable();
        GenerarReporte = new javax.swing.JButton();
        ReporteExcel = new javax.swing.JButton();
        Rinicio = new com.toedter.calendar.JDateChooser();
        Rfin = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        IdProveedor = new javax.swing.JTextField();
        CECOP = new javax.swing.JTextField();
        NombreP = new javax.swing.JTextField();
        RegistrarP = new javax.swing.JButton();
        ActualizarP = new javax.swing.JButton();
        EliminarP = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        ProveedorT = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        FechaP = new com.toedter.calendar.JDateChooser();
        jLabel28 = new javax.swing.JLabel();
        TelefonoP = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        TipoP = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnl1.setBackground(new java.awt.Color(204, 204, 204));

        btnventa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnventa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Ventas.png"))); // NOI18N
        btnventa.setText("Nueva Venta");
        btnventa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnventaActionPerformed(evt);
            }
        });

        btnInventario.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInventario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Inventario.png"))); // NOI18N
        btnInventario.setText("Inventario");
        btnInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInventarioActionPerformed(evt);
            }
        });

        btnVentas.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnVentas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Ventas.png"))); // NOI18N
        btnVentas.setText("Ventas");
        btnVentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVentasActionPerformed(evt);
            }
        });

        btnGestion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnGestion.setText("Gestion de Articulos");
        btnGestion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionActionPerformed(evt);
            }
        });

        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Salida.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnRegistrarUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnRegistrarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Usuarios.png"))); // NOI18N
        btnRegistrarUsuario.setText("Registrar Usuario");
        btnRegistrarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarUsuarioActionPerformed(evt);
            }
        });

        btnReporteVenta.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnReporteVenta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Reportes.png"))); // NOI18N
        btnReporteVenta.setText("Reporte");
        btnReporteVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteVentaActionPerformed(evt);
            }
        });

        Proveedor.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Proveedor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Proveedores.png"))); // NOI18N
        Proveedor.setText("Proveedor");
        Proveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProveedorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl1Layout.createSequentialGroup()
                                .addComponent(PictureD, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(Proveedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReporteVenta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInventario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnventa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnVentas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGestion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(btnRegistrarUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(pnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PictureD, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnventa)
                .addGap(4, 4, 4)
                .addComponent(btnInventario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVentas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGestion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReporteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Proveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRegistrarUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 680));

        jLabel14.setText("Codigo");

        jLabel15.setText("Producto");

        jLabel16.setText("Cantidad");

        jLabel17.setText("Precio");

        codigoVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoVentaActionPerformed(evt);
            }
        });
        codigoVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoVentaKeyPressed(evt);
            }
        });

        cantidadVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadVentaActionPerformed(evt);
            }
        });
        cantidadVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantidadVentaKeyPressed(evt);
            }
        });

        precioVenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioVentaKeyReleased(evt);
            }
        });

        tablaVenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Cantidad", "Precio", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tablaVenta);

        jLabel19.setText("Total a Pagar");

        totalVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalVentaActionPerformed(evt);
            }
        });

        btnComprar.setText("Comprar");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        btnAgregarTablaVenta.setText("Eliminar");
        btnAgregarTablaVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarTablaVentaActionPerformed(evt);
            }
        });

        jLabel7.setText("Disponible");

        jLabel21.setText("Pago con:");

        jLabel22.setText("Forma de Pago: ");

        formapago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta Credito", "Tarjeta Debito" }));
        formapago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formapagoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(totalVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(DineroR, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(codigoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addGap(0, 243, Short.MAX_VALUE))
                                    .addComponent(productoVenta))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(precioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(cantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(95, 95, 95))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(stockVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                                        .addComponent(btnAgregarTablaVenta)))))))
                .addGap(121, 121, 121))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnComprar)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formapago, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(123, 123, 123))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productoVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidadVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAgregarTablaVenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(totalVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(DineroR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(formapago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnComprar)
                .addGap(62, 62, 62))
        );

        Inventario.addTab("Nueva Venta", jPanel4);

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel1.setText("Articulo:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel2.setText("Codigo: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel3.setText("Total de Articulos: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel5.setText("Costo sin IVA:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel6.setText("Precio Venta: ");

        cod.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codKeyPressed(evt);
            }
        });

        btnGuardarInventario.setText("Guardar");
        btnGuardarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInventarioActionPerformed(evt);
            }
        });

        btnEliminarInventario.setText("Eliminar");
        btnEliminarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInventarioActionPerformed(evt);
            }
        });

        btnBuscarInventario.setText("Buscar");
        btnBuscarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInventarioActionPerformed(evt);
            }
        });

        btnActualizarInventario.setText("Actualizar");
        btnActualizarInventario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarInventarioActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel20.setText("Proveedor: ");

        btnGcodigo.setText("Generar Codigo");
        btnGcodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGcodigoActionPerformed(evt);
            }
        });

        jButton2.setText("Imprimir Codigo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lblprueba.setBackground(new java.awt.Color(204, 255, 255));

        jButton1.setText("Generar todos los codigos de barra");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel20))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Prov, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cod, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(art)
                            .addComponent(iba, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(tot)))
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnGcodigo)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(160, 160, 160))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnActualizarInventario)
                            .addComponent(btnGuardarInventario))
                        .addGap(136, 136, 136)
                        .addComponent(jButton1)
                        .addGap(180, 180, 180))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarInventario, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminarInventario, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(35, 35, 35)
                        .addComponent(lblprueba, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnBuscarInventario)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(art, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarInventario))
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblprueba, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(btnGcodigo))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(iba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(btnGuardarInventario)))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton1)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizarInventario)
                    .addComponent(Prov, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addContainerGap(293, Short.MAX_VALUE))
        );

        Inventario.addTab("Invetario", jPanel1);

        jtventas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Codigo", "Articulo", "Cantidad", "Precio", "Forma de Pago", "Fecha de Venta", "Hora de Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtventas);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1065, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        Inventario.addTab("Ventas", jPanel3);

        jLabel9.setText("Codigo");

        codigoArticulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                codigoArticuloKeyPressed(evt);
            }
        });

        jLabel10.setText("Articulo");

        jLabel11.setText("Cantidad");

        jLabel12.setText("Costo sin Iva");

        costoArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoArticuloActionPerformed(evt);
            }
        });

        gtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Articulo", "Codigo", "Cantidad", "Costo Sin Iva", "Precio Venta", "Total Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        gtProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gtProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(gtProductos);

        jLabel13.setText("Precio Venta");

        eliminarArticulo.setText("Eliminar");
        eliminarArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarArticuloActionPerformed(evt);
            }
        });

        buscarArticulo.setText("Buscar");

        jLabel8.setText("Total Venta");

        totalArticulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalArticuloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(codigoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(articuloA, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cantidadArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(costoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(precioArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(totalArticulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(buscarArticulo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarArticulo)
                        .addGap(0, 180, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel8)
                    .addComponent(buscarArticulo)
                    .addComponent(eliminarArticulo))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(articuloA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cantidadArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(costoArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(precioArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalArticulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        Inventario.addTab("Gestion de Articulos", jPanel2);

        TablaReprotes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id_Venta", "Codigo", "Producto", "Cantidad", "Precio", "Forma de Pago", "Fecha de Venta", "Hora Venta"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Long.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(TablaReprotes);

        GenerarReporte.setText("Generar Reporte");
        GenerarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarReporteActionPerformed(evt);
            }
        });

        ReporteExcel.setText("Reporte Excel");
        ReporteExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReporteExcelActionPerformed(evt);
            }
        });

        Rinicio.setDateFormatString("YYYY/MM/dd");

        Rfin.setDateFormatString("YYYY/MM/dd");

        jLabel4.setText("Fecha Inicio");

        jLabel18.setText("Fecha Fin");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 465, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(107, 107, 107))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(Rinicio, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(Rfin, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(GenerarReporte)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ReporteExcel))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel18)))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GenerarReporte)
                        .addComponent(ReporteExcel))
                    .addComponent(Rinicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Rfin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(235, Short.MAX_VALUE))
        );

        Inventario.addTab("Reportes", jPanel5);

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Proveedor");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Id:");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("CECO");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Nombre");

        IdProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IdProveedorKeyPressed(evt);
            }
        });

        RegistrarP.setText("Registrar");
        RegistrarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarPActionPerformed(evt);
            }
        });

        ActualizarP.setText("Actualizar");
        ActualizarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarPActionPerformed(evt);
            }
        });

        EliminarP.setText("Eliminar");
        EliminarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarPActionPerformed(evt);
            }
        });

        ProveedorT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "CECO", "Nombre", "Fecha", "Telefono", "Tipo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ProveedorT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProveedorTMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ProveedorT);

        jLabel27.setText("Fecha");

        FechaP.setDateFormatString("yyyy/MM/dd");

        jLabel28.setText("Telefono");

        jLabel29.setText("Tipo");

        TipoP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TipoPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(IdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CECOP, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addGap(125, 125, 125)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel29))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(FechaP, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TelefonoP, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(TipoP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 29, Short.MAX_VALUE)))
                        .addGap(93, 93, 93))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 864, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(EliminarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RegistrarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ActualizarP, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                        .addGap(0, 122, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FechaP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(IdProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CECOP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NombreP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TelefonoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(TipoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(EliminarP)
                        .addGap(18, 18, 18)
                        .addComponent(RegistrarP)
                        .addGap(36, 36, 36)
                        .addComponent(ActualizarP))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );

        Inventario.addTab("Proveedores", jPanel6);

        getContentPane().add(Inventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 1100, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInventarioActionPerformed
        try {
            // TODO add your handling code here:
            Guardar();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarInventarioActionPerformed

    private void btnEliminarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInventarioActionPerformed
        // TODO add your handling code here:
        Eliminar();
    }//GEN-LAST:event_btnEliminarInventarioActionPerformed

    private void btnBuscarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInventarioActionPerformed
        // TODO add your handling code here:
        Buscar();
    }//GEN-LAST:event_btnBuscarInventarioActionPerformed

    private void btnActualizarInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarInventarioActionPerformed
        try {
            // TODO add your handling code here:
            Actualizar();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnActualizarInventarioActionPerformed

    private void costoArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costoArticuloActionPerformed

    private void btnInventarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInventarioActionPerformed
        // TODO add your handling code here:
        Inventario.setSelectedIndex(1);
    }//GEN-LAST:event_btnInventarioActionPerformed

    private void btnGestionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionActionPerformed
        // TODO add your handling code here:
         btnGestion();
    }//GEN-LAST:event_btnGestionActionPerformed

    private void btnventaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnventaActionPerformed
        // TODO add your handling code here:
        Inventario.setSelectedIndex(0);
    }//GEN-LAST:event_btnventaActionPerformed
    /*
    Boton Ventas
    */
    private void btnVentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVentasActionPerformed
        // TODO add your handling code here:
        Inventario.setSelectedIndex(2);
        Connection con = null;
        try{
            con = getConection();
            DefaultTableModel modelo = new DefaultTableModel();
            jtventas.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            String sql = "SELECT* FROM Ventas ";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadColumnas = rsMD.getColumnCount();
            modelo.addColumn("Id");
            modelo.addColumn("Codigo");
            modelo.addColumn("Articulo");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Precio");
            modelo.addColumn("Forma de Pago");
            modelo.addColumn("Fecha de Venta");
            modelo.addColumn("Hora de Venta");
            
            while(rs.next()){
                
                Object[] filas = new Object[cantidadColumnas];
                
                
                for(int i=0; i< cantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1) ; 
                }
                modelo.addRow(filas);
            }
            
        } catch( SQLException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_btnVentasActionPerformed

    private void totalArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalArticuloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalArticuloActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void totalVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalVentaActionPerformed

    private void precioVentaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioVentaKeyReleased
        // TODO add your handling code here:
        DefaultTableModel modelo = new DefaultTableModel();
        
    }//GEN-LAST:event_precioVentaKeyReleased
    /*
    Boton para realizar la venta y que se registre en la base de datos y hacer el reporte necesario
    */
    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed

        try {
            // TODO add your handling code here:
            GuardarVenta();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            limpiarVenta();
            ActualizarStock();
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
            pdf();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
        LimpiarTablaVenta();
        totalVenta.setText(null);
        DineroR.setText(null);
    }//GEN-LAST:event_btnComprarActionPerformed

    private void codigoVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoVentaActionPerformed
    /*
    Funcion para que al precionar enter se llenen solo los campos en el inventario
    */
    private void codigoVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoVentaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(codigoVenta.getText())){
                Connection con = null;
                try {
                    con = getConection();
                    ps = con.prepareStatement("select * from Inventario where Codigo = ?");
                    ps.setString(1, codigoVenta.getText());

                    rs = ps.executeQuery();      
                    if (rs.next() ) {
                      //num.setText(rs.getString("No"));
                      codigoVenta.setText(rs.getString("Codigo"));
                      productoVenta.setText(rs.getString("Articulo"));
                      //tot.setText(rs.getString("TotalArt"));
                      //iba.setText(rs.getString("CostoSinIva"));
                      precioVenta.setText(rs.getString("PrecioVenta"));
                      stockVenta.setText(Integer.toString(rs.getInt("TotalArt")));
                      //Prov.setText(rs.getString("Prov"));
                      cantidadVenta.requestFocus();
                    }else{
                        JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
                    }
                    con.close();
                } catch (Exception e) {
                }
            }else{
                JOptionPane.showMessageDialog(null, "Ingreses el codigo del producto");
            }
        }
    }//GEN-LAST:event_codigoVentaKeyPressed
    /*
    Funcion para que al momento de dar enter en el panel de buscar se busque solo el producto y se llenen
    los campos
    */
    private void codigoArticuloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codigoArticuloKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(codigoArticulo.getText())){
                Connection con = null;
                try {
                    con = getConection();
                    ps = con.prepareStatement("select * from Inventario where Codigo = ?");
                    ps.setString(1, codigoArticulo.getText());

                    rs = ps.executeQuery();      
                    if (rs.next() ) {
                      //num.setText(rs.getString("No"));
                      codigoArticulo.setText(rs.getString("Codigo"));
                      articuloA.setText(rs.getString("Articulo"));
                      cantidadArticulo.setText(rs.getString("TotalArt"));
                      costoArticulo.setText(rs.getString("CostoSinIva"));
                      precioArticulo.setText(rs.getString("PrecioVenta"));
                      totalArticulo.setText(Integer.toString(rs.getInt("TotalVen")));
                      //Prov.setText(rs.getString("Prov"));
                    }else{
                        JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
                    }
                    con.close();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_codigoArticuloKeyPressed
    /*Funcion en el panel ventas para al momento de dar enter en el panel de nueva venta
    se pueda registrar a la tabla mostrada antes de registrarlo en la base de datos.
    */
    private void cantidadVentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadVentaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(cantidadVenta.getText())){
                String codigo = codigoVenta.getText();
                String descripcion = productoVenta.getText();
                float pre = Float.parseFloat(precioVenta.getText());
                int cantidad = Integer.parseInt(cantidadVenta.getText());
                double total = cantidad*pre;
                int disponible = Integer.parseInt(stockVenta.getText());
                if(disponible >= cantidad){
                    item = item + 1;
                    DefaultTableModel modelo = (DefaultTableModel) tablaVenta.getModel();
                    for(int i = 0; i < tablaVenta.getRowCount();i++){
                        if(tablaVenta.getValueAt(i, 1).equals(productoVenta.getText())){
                            JOptionPane.showMessageDialog(null, "El producto ya esta registrado");
                            LimpiarVenta();
                            return;
                        }
                    }
                    ArrayList lista = new ArrayList();
                    lista.add(item);
                    lista.add(codigo);
                    lista.add(descripcion);
                    lista.add(cantidad);
                    lista.add(pre);
                    lista.add(total);
                    //lista.add(fecha);
                    
                    Object[] O = new Object[6];
                    O[0] = lista.get(1);
                    O[1] = lista.get(2);
                    O[2] = lista.get(3);
                    O[3] = lista.get(4);
                    O[4] = lista.get(5);
                    //O[5] = lista.get(6);
                    modelo.addRow(O);
                    tablaVenta.setModel(modelo);
                    totalPagar();
                    LimpiarVenta();
                    codigoVenta.requestFocus();
                }else{
                    JOptionPane.showMessageDialog(null, "Stock no disponible");
                }                
            }else{
                    JOptionPane.showMessageDialog(null, "Ingrese cantidad");
            }
        }
    }//GEN-LAST:event_cantidadVentaKeyPressed

    private void cantidadVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadVentaActionPerformed

    private void eliminarArticuloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarArticuloActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            con = getConection();
            
            ps = con.prepareStatement("delete from Inventario where Codigo = ?");
            ps.setString(1, codigoArticulo.getText());
            int res = ps.executeUpdate();
            if (res > 0) {
              JOptionPane.showMessageDialog(null, "Se elimino el Articulo con clave: "+codigoArticulo.getText() + " de forma exitosa!"); 
              limpiarCaja();
            }else{
                JOptionPane.showMessageDialog(null, "Hubo un error al eliminar!"); 
            }
            con.close();    
        } catch (Exception e) {
            System.err.println(e);
        }
        codigoArticulo.setText(null);
        articuloA.setText(null);
        cantidadArticulo.setText(null);
        costoArticulo.setText(null);
        precioArticulo.setText(null);
        totalArticulo.setText(null);
        btnGestion();
    }//GEN-LAST:event_eliminarArticuloActionPerformed
    /*
    Funcion que al dar click sobre a tabla, rellena los campos
    */
    private void gtProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gtProductosMouseClicked
        // TODO add your handling code here:
        int fila = gtProductos.rowAtPoint(evt.getPoint());
        codigoArticulo.setText(gtProductos.getValueAt(fila,2).toString());
        articuloA.setText(gtProductos.getValueAt(fila,1).toString());
        cantidadArticulo.setText(gtProductos.getValueAt(fila,3).toString());
        costoArticulo.setText(gtProductos.getValueAt(fila,4).toString());
        precioArticulo.setText(gtProductos.getValueAt(fila,5).toString());
        totalArticulo.setText(gtProductos.getValueAt(fila,6).toString()); 
    }//GEN-LAST:event_gtProductosMouseClicked
    /*
    Dando click en la tabla llena los registros
    */
    private void btnAgregarTablaVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarTablaVentaActionPerformed
        // TODO add your handling code here:
        DefaultTableModel modelo = (DefaultTableModel) tablaVenta.getModel();
        modelo.removeRow(tablaVenta.getSelectedRow());
        totalPagar();
        codigoVenta.requestFocus();
    }//GEN-LAST:event_btnAgregarTablaVentaActionPerformed

    private void btnRegistrarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarUsuarioActionPerformed
        // TODO add your handling code here:
        Registro r = new Registro();
        r.setVisible(true);
        //this.dispose();
    }//GEN-LAST:event_btnRegistrarUsuarioActionPerformed

    private void btnReporteVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteVentaActionPerformed
        // TODO add your handling code here:
        Inventario.setSelectedIndex(4);
        
    }//GEN-LAST:event_btnReporteVentaActionPerformed
    /*
    Funcion que llena obtiene las fechas de las ventas para que los llene en la tabla
    */
    private void GenerarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarReporteActionPerformed
        // TODO add your handling code here:
        String a = ((JTextField)Rinicio.getDateEditor().getUiComponent()).getText();
        String b = ((JTextField)Rfin.getDateEditor().getUiComponent()).getText();
        Connection con = null;
        try{
            con = getConection();
            DefaultTableModel modelo = new DefaultTableModel();
            TablaReprotes.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            String sql = "SELECT* FROM Ventas WHERE Fecha_Venta BETWEEN ? AND ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, a);
            ps.setString(2, b);
            rs = ps.executeQuery();
            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadColumnas = rsMD.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("Codigo");
            modelo.addColumn("Producto");
            modelo.addColumn("Cantidad");
            modelo.addColumn("Precio");
            modelo.addColumn("Forma de Pago");
            modelo.addColumn("Fecha Venta");
            modelo.addColumn("Hora Venta");
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i=0; i< cantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1) ; 
                }
                modelo.addRow(filas);
            }
            
        } catch( SQLException ex){
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_GenerarReporteActionPerformed

    private void ReporteExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReporteExcelActionPerformed
        // TODO add your handling code here:
        Excel();
    }//GEN-LAST:event_ReporteExcelActionPerformed

    private void formapagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formapagoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formapagoActionPerformed
    /*
    Lista la base de datos del proveedor 
    */
    public void Proveedor(){
        Inventario.setSelectedIndex(5);
        Connection con = null;
        try{
            con = getConection();
            DefaultTableModel modelo = new DefaultTableModel();
            ProveedorT.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            String sql = "Select* FROM Proveedor";
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            ResultSetMetaData rsMD = rs.getMetaData();
            int cantidadColumnas = rsMD.getColumnCount();
            modelo.addColumn("ID");
            modelo.addColumn("CECO");
            modelo.addColumn("Nombre");
            modelo.addColumn("Fecha Registro");
            modelo.addColumn("Telefono");
            modelo.addColumn("Tipo");
            while(rs.next()){
                Object[] filas = new Object[cantidadColumnas];
                for(int i=0; i< cantidadColumnas; i++){
                    filas[i] = rs.getObject(i + 1) ; 
                }
                modelo.addRow(filas);
            }
        } catch( SQLException ex){
            System.err.println(ex.toString());
     }
    } 
    private void ProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProveedorActionPerformed
        // TODO add your handling code here:
        Proveedor();
    }//GEN-LAST:event_ProveedorActionPerformed

    private void TipoPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TipoPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TipoPActionPerformed

    private void IdProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IdProveedorKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(IdProveedor.getText())){
                Connection con = null;
                try {
                    con = getConection();
                    ps = con.prepareStatement("select* from Proveedor where IdProveedor = ?");
                    ps.setString(1, IdProveedor.getText());

                    rs = ps.executeQuery();      
                    if (rs.next() ) {
                      //num.setText(rs.getString("No"));
                      IdProveedor.setText(rs.getString("IdProveedor"));
                      CECOP.setText(rs.getString("CECO"));
                      NombreP.setText(rs.getString("Nombre"));
                      //FechaP.setText(rs.getString("FechaRegistro"));
                      TelefonoP.setText(rs.getString("Telefono"));
                      TipoP.setText(rs.getString("Tipo"));
                      String fecha = rs.getString("FechaRegistro");
                      //Se usa este formato para asginarlo al JDateChooser
                      java.util.Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(fecha);
                      FechaP.setDate(date2);
                    
                    }else{
                        JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
                    }
                    con.close();
                } catch (Exception e) {
                }
            }
        }
    }//GEN-LAST:event_IdProveedorKeyPressed
    /*
    Dar click en la tabla proveedor, rellena los campos 
    */
    private void ProveedorTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProveedorTMouseClicked
        try {
            // TODO add your handling code here:
            int fila = ProveedorT.rowAtPoint(evt.getPoint());
            IdProveedor.setText(ProveedorT.getValueAt(fila,0).toString());
            CECOP.setText(ProveedorT.getValueAt(fila,1).toString());
            NombreP.setText(ProveedorT.getValueAt(fila,2).toString());
            String fecha = ProveedorT.getValueAt(fila,3).toString();
            java.util.Date date2 = new SimpleDateFormat("yyyy-MM-dd").parse(fecha);
            FechaP.setDate(date2);
            TipoP.setText(ProveedorT.getValueAt(fila,5).toString());
            boolean r = TelefonoP.getText().isEmpty();
            if(r == true){
                TelefonoP.setText(ProveedorT.getValueAt(fila,4).toString());
            }else{
                TelefonoP.setText(null);    
            }
        } catch (ParseException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ProveedorTMouseClicked
    /*
    Elimina proveedor
    */
    private void EliminarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarPActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            con = getConection();
            
            ps = con.prepareStatement("delete from Proveedor where IdProveedor = ?");
            ps.setString(1, IdProveedor.getText());
            int res = ps.executeUpdate();
            if (res > 0) {
              JOptionPane.showMessageDialog(null, "Se elimino el Proveedor : "+IdProveedor.getText() + " de forma exitosa!"); 
            }else{
                JOptionPane.showMessageDialog(null, "Hubo un error al eliminar!"); 
            }
            con.close();    
        } catch (Exception e) {
            System.err.println(e);
        }
        IdProveedor.setText(null);
        CECOP.setText(null);
        NombreP.setText(null);
        //FechaP.setText(null);
        TelefonoP.setText(null);
        TipoP.setText(null);
        Proveedor();
    }//GEN-LAST:event_EliminarPActionPerformed
    /*
    Actualiza proveedor
    */
    private void ActualizarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarPActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try{
            con = getConection();
            ps = con.prepareStatement("UPDATE Proveedor SET CECO=?, Nombre=?, FechaRegistro=?, Telefono=?, Tipo=? WHERE IdProveedor=?");
            //ps.setString(1, null);
            
            ps.setInt(1, Integer.parseInt(CECOP.getText()));
            ps.setString(2, NombreP.getText());
            ps.setString(3,((JTextField)FechaP.getDateEditor().getUiComponent()).getText());
            ps.setInt(4, Integer.parseInt(TelefonoP.getText()));
            ps.setString(5, TipoP.getText());
            ps.setInt(6, Integer.parseInt(IdProveedor.getText()));
            int res = ps.executeUpdate();
            if(res>0){
                JOptionPane.showMessageDialog(null, "Articulo modificado"); //Empleado modificado
                //limpiarCaja();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al Modificar articulo");
                //limpiarCaja();
            }
        con.close();
        }
        
        catch (Exception e) {
            System.err.println(e);
        }
        IdProveedor.setText(null);
        CECOP.setText(null);
        NombreP.setText(null);
        //FechaP.setText(null);
        TelefonoP.setText(null);
        TipoP.setText(null);
        Proveedor();
    }//GEN-LAST:event_ActualizarPActionPerformed
    /*
    Registra proveedor
    */
    private void RegistrarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarPActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            
            con = getConection();    
            ps = con.prepareStatement("insert into Proveedor (CECO, Nombre, FechaRegistro, Telefono, Tipo) values (?,?, ?, ?, ?)");
            //ps.setString(1, null);
            //ps.setInt(1, Integer.parseInt(IdProveedor.getText()));
            ps.setInt(1, Integer.parseInt(CECOP.getText()));
            ps.setString(2, NombreP.getText());
            ps.setString(3,((JTextField)FechaP.getDateEditor().getUiComponent()).getText());
            ps.setInt(4, Integer.parseInt(TelefonoP.getText()));
            ps.setString(5, TipoP.getText());
            
            
            int res = ps.executeUpdate();
            
            if (res > 0) {
                JOptionPane.showMessageDialog(null, "El Articulo se registro con Ã©xito!");
                limpiarCaja();
            }else{
               JOptionPane.showMessageDialog(null, "Hubo un error al guardar!");       
            }
            con.close();          
        } catch (Exception e) {
            System.err.println(e);
        }
        Proveedor();
    }//GEN-LAST:event_RegistrarPActionPerformed

    private void codKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            if(!"".equals(cod.getText())){
                Connection con = null;
                try {
                    con = getConection();
                    ps = con.prepareStatement("select* from Inventario where codigo = ?");
                    ps.setString(1, cod.getText());

                    rs = ps.executeQuery();      
                    if (rs.next() ) {
                      //num.setText(rs.getString("No"));
                      cod.setText(rs.getString("Codigo"));
                      art.setText(rs.getString("Articulo"));
                      tot.setText(rs.getString("TotalArt"));
                      //FechaP.setText(rs.getString("FechaRegistro"));
                      iba.setText(rs.getString("CostoSinIva"));
                      precio.setText(rs.getString("PrecioVenta"));
                      Prov.setText(rs.getString("Prov"));
                    }else{
                        JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
                    }
                    con.close();
                } catch (Exception e) {
                }
            }
        }
        
    }//GEN-LAST:event_codKeyPressed
    @SuppressWarnings( "deprecation" )
    /*
    Funcion que hace el codigo de barras
    */
    private void btnGcodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGcodigoActionPerformed
        // TODO add your handling code here:
        Connection con = null;
        try {
            
            con = getConection();    
            ps = con.prepareStatement("select * from Inventario where Codigo = ?");
            //ps.setString(1, null);
            //ps.setInt(1, Integer.parseInt(IdProveedor.getText()));
            ps.setLong(1, Long.parseLong(cod.getText()));
            rs = ps.executeQuery();
            
            rs.next();
            String totalArt = rs.getString("Codigo");
            JBarcodeBean barcode = new JBarcodeBean();
            barcode.setCodeType(new Interleaved25());
        //barcode.setCodeType(new Code39());

        // nuestro valor a codificar y algunas configuraciones mas
        barcode.setCode(totalArt);
        barcode.setCheckDigit(true);

        picture = barcode.draw(new BufferedImage(470, 250, BufferedImage.TYPE_INT_RGB));

        ImageIcon barras = new ImageIcon(picture);
        lblprueba.setIcon(barras);
        } catch (Exception e) {
            System.err.println(e);
        }
    }//GEN-LAST:event_btnGcodigoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        /*Instanciamos la clase CodigoBarra*/
        CodigoBarra  c = new CodigoBarra();
        c.CodigosPDF();
    }//GEN-LAST:event_jButton1ActionPerformed
    /*Funcion que genera codigo de barra*/
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO code application logic here
            
            Document doc = new Document();
            PdfWriter pdf = PdfWriter.getInstance(doc, new FileOutputStream("C:/Users/User/Desktop/codigoI.pdf"));
            doc.open();
            
            Barcode39 code =new Barcode39();
            
            code.setCode(cod.getText());
            Image img = code.createImageWithBarcode(pdf.getDirectContent(), BaseColor.BLACK, BaseColor.BLACK);
            doc.add(img);
                
            doc.add(new Paragraph(" "));
            
            doc.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CodigoBarra.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(CodigoBarra.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, "Codigos de barra generado con exito");
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ActualizarP;
    private javax.swing.JTextField CECOP;
    private javax.swing.JTextField DineroR;
    private javax.swing.JButton EliminarP;
    private com.toedter.calendar.JDateChooser FechaP;
    private javax.swing.JButton GenerarReporte;
    private javax.swing.JTextField IdProveedor;
    private javax.swing.JTabbedPane Inventario;
    private javax.swing.JTextField NombreP;
    private javax.swing.JLabel PictureD;
    private javax.swing.JTextField Prov;
    private javax.swing.JButton Proveedor;
    private javax.swing.JTable ProveedorT;
    private javax.swing.JButton RegistrarP;
    private javax.swing.JButton ReporteExcel;
    private com.toedter.calendar.JDateChooser Rfin;
    private com.toedter.calendar.JDateChooser Rinicio;
    private javax.swing.JTable TablaReprotes;
    private javax.swing.JTextField TelefonoP;
    private javax.swing.JTextField TipoP;
    private javax.swing.JTextField art;
    private javax.swing.JTextField articuloA;
    private javax.swing.JButton btnActualizarInventario;
    private javax.swing.JButton btnAgregarTablaVenta;
    private javax.swing.JButton btnBuscarInventario;
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton btnEliminarInventario;
    private javax.swing.JButton btnGcodigo;
    private javax.swing.JButton btnGestion;
    private javax.swing.JButton btnGuardarInventario;
    private javax.swing.JButton btnInventario;
    private javax.swing.JButton btnRegistrarUsuario;
    private javax.swing.JButton btnReporteVenta;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVentas;
    private javax.swing.JButton btnventa;
    private javax.swing.JButton buscarArticulo;
    private javax.swing.JTextField cantidadArticulo;
    private javax.swing.JTextField cantidadVenta;
    private javax.swing.JTextField cod;
    private javax.swing.JTextField codigoArticulo;
    private javax.swing.JTextField codigoVenta;
    private javax.swing.JTextField costoArticulo;
    private javax.swing.JButton eliminarArticulo;
    private javax.swing.JComboBox<String> formapago;
    private javax.swing.JTable gtProductos;
    private javax.swing.JTextField iba;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jtventas;
    private javax.swing.JLabel lblprueba;
    private javax.swing.JPanel pnl1;
    private javax.swing.JTextField precio;
    private javax.swing.JTextField precioArticulo;
    private javax.swing.JTextField precioVenta;
    private javax.swing.JTextField productoVenta;
    private javax.swing.JTextField stockVenta;
    private javax.swing.JTable tablaVenta;
    private javax.swing.JTextField tot;
    private javax.swing.JTextField totalArticulo;
    public static javax.swing.JTextField totalVenta;
    // End of variables declaration//GEN-END:variables

    /*
    Funcion que calcula cuanto se va a pagar en el panel ventas
    */
    private void totalPagar(){
    totalPagar=0.00;
    int numfila = tablaVenta.getRowCount();
        for (int i = 0; i < numfila; i++) {
            double cal = Double.parseDouble(String.valueOf(tablaVenta.getModel().getValueAt(i,4))); 
            totalPagar = totalPagar + cal;
        }
        totalVenta.setText(String.format("%.2f",totalPagar));
    }
    public void LimpiarVenta(){
        codigoVenta.setText(null);
        productoVenta.setText(null);
        precioVenta.setText(null);
        cantidadVenta.setText(null);
        stockVenta.setText(null);
    }
    public void LimpiarTablaVenta(){
        DefaultTableModel tmp = (DefaultTableModel) tablaVenta.getModel();
        int fila = tablaVenta.getRowCount() ;
        for (int i = 0; i < fila; i++) {
            tmp.removeRow(0);
        }
    }
    /*
    Funcion necesaria para actualizar el stock
    */
    private int buscar(long id) throws SQLException{
        int totalArt = 0;
        Connection con = null;
        con = getConection();
        try {
            ps = con.prepareStatement("select * from Inventario where Codigo = ?");
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
        ps.setLong(1, id);
        rs = ps.executeQuery();
        if (rs.next() ) {
            totalArt = rs.getInt("TotalArt");
        }else{
           JOptionPane.showMessageDialog(null, "Hubo un error al buscar!"); 
        }
        con.close();
        return totalArt;
    }
    public void ActualizarStock() throws SQLException{
        for(int i = 0; i< tablaVenta.getRowCount();i++){    
            long cod = Long.parseLong(tablaVenta.getValueAt(i,0).toString());
            int cant = Integer.parseInt(tablaVenta.getValueAt(i,2).toString());    
            int StockActual = buscar(cod) - cant;
            try {
                Connection con = getConection();
                ps = con.prepareStatement("UPDATE Inventario SET TotalArt=? WHERE Codigo=?");
                //int Actual =(Integer.parseInt(rs.getString("TotalArt"))) - StockActual;
                ps.setInt(1, StockActual);    
                ps.setLong(2, cod);
                //ps.executeUpdate();
                int res = ps.executeUpdate();
                if(res>0){
                    System.out.println("Articulo modificado"); //Empleado modificado
                }
                else{
                    System.out.println("Error al Modificar articulo");
                }
                con.close();
            } catch (SQLException ex) {
                Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
            }    
        }    
    }
    /*
    FunciÃ³n para crear el PDF
    */
    public void pdf() throws FileNotFoundException, DocumentException, BadElementException{
           
        try {
            Document doc = new Document();
            String ruta  = System.getProperty("user.home");
            PdfWriter.getInstance(doc ,new FileOutputStream(ruta + "/Desktop/Reporte.pdf"));
            doc.open();
            Image img = Image.getInstance("C:/Users/User/Documents/NetBeansProjects/ServicioS/build/classes/Img/logo.jpg");
            img.scalePercent(20);
            
            //Image imagenExterna = new ImageIcon().getImage();
            // img = img.("src/img/logo_1.jpg");
            Paragraph uni = new Paragraph();
            uni.add(Chunk.NEWLINE);
            uni.add("Universidad Automa del Estado de MÃ©xico\n");
            uni.setAlignment(Element.ALIGN_CENTER);
            doc.add(uni);
            
            PdfPTable imag = new PdfPTable(3);
            imag.setWidthPercentage(100);
            imag.getDefaultCell().setBorder(0);
            float[] ColumnaI = new float[]{50f,40f,50f};
            imag.setWidths(ColumnaI);
            imag.setHorizontalAlignment(Element.ALIGN_CENTER);
            imag.addCell("    ");
            imag.addCell(img);
            imag.addCell("    ");
            doc.add(imag);
            
            Paragraph fecha = new Paragraph();
            Font negrita = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD, BaseColor.BLACK);
            fecha.setAlignment(Element.ALIGN_LEFT);
            fecha.add(Chunk.NEWLINE);
            Date date = new Date();
            fecha.add("\nFecha: "+ new SimpleDateFormat("dd-MM-YYYY").format(date)+"\n\n");
            
            Paragraph Encabezado = new Paragraph();
            float[] ColumnaEncabezado = new float[]{70f};
            Encabezado.setAlignment(Element.ALIGN_CENTER);
            //Encabezado.addCell(imagen);
            
            String direccion = "Av.Instituto Literario Oriente No.100,\n Col. Centro, Toluca Estado de MÃ©xico. CP: 50000";
            String RFC = "UAE560321";
            String tienda = "Potros C.U";
            String cost = "11305";
            
            Encabezado.add(" \nDireccion"+direccion+"\nRFC: "+RFC+"\nTienda "+tienda+"\nCentro de Costo: "+cost);
            Encabezado.add(fecha);
            Encabezado.add("-----------------------------------------------------------");
            Encabezado.add(Chunk.NEWLINE);
            doc.add(Encabezado);
            
            //Productos
            PdfPTable tablaPro = new PdfPTable(4);
            tablaPro.setWidthPercentage(100);
            tablaPro.getDefaultCell().setBorder(0);
            float[] Columnapro = new float[] {50f, 10f, 15f, 20f};
            tablaPro.setWidths(Columnapro);
            tablaPro.setHorizontalAlignment(Element.ALIGN_CENTER);
            
            PdfPCell pro1 = new PdfPCell(new Phrase("Producto",negrita));
            PdfPCell pro2 = new PdfPCell(new Phrase("Cantidad",negrita));
            PdfPCell pro3 = new PdfPCell(new Phrase("Precio",negrita));
            PdfPCell pro4 = new PdfPCell(new Phrase("Total",negrita));
            pro1.setBorder(0);
            pro2.setBorder(0);
            pro3.setBorder(0);
            pro4.setBorder(0);
            pro1.setBackgroundColor(BaseColor.DARK_GRAY);
            pro2.setBackgroundColor(BaseColor.DARK_GRAY);
            pro3.setBackgroundColor(BaseColor.DARK_GRAY);
            pro4.setBackgroundColor(BaseColor.DARK_GRAY);
            tablaPro.addCell(pro1);
            tablaPro.addCell(pro2);
            tablaPro.addCell(pro3);
            tablaPro.addCell(pro4);
            for (int i = 0; i < tablaVenta.getRowCount(); i++) {
                String producto = tablaVenta.getValueAt(i, 2).toString();
                String cantidad = tablaVenta.getValueAt(i, 1).toString();
                String precio = tablaVenta.getValueAt(i, 3).toString();
                String total = tablaVenta.getValueAt(i, 4).toString();
                tablaPro.addCell(cantidad);
                tablaPro.addCell(producto);
                tablaPro.addCell(precio);
                tablaPro.addCell(total);
            }
            //tablaPro.addCell(fecha);
            doc.add(tablaPro);
          
            Paragraph info = new Paragraph();
            DecimalFormat df = new DecimalFormat("#.000");
            float a = Float.parseFloat(totalVenta.getText());
            float iva = (float) (a -(a/1.16));
            info.add(Chunk.NEWLINE);
            info.add("Iva incluido: " + df.format(iva) );
            info.add("\nTotal: " + totalVenta.getText());
            info.setAlignment(Element.ALIGN_CENTER);
            doc.add(info);
            
            Paragraph mensaje = new Paragraph();
            mensaje.add(Chunk.NEWLINE);
            mensaje.add("\n-------------------------------");
            mensaje.add("\nMuchas Gracias por su compra");
            mensaje.add("\nPago en una sola exhibiciÃ³n");
            mensaje.add("\n-------------------------------");
            mensaje.setAlignment(Element.ALIGN_CENTER);
            doc.add(mensaje);
            doc.close();
            JOptionPane.showMessageDialog(null, "Reporte Creado ");
            //Desktop.getDesktop().open(file);   
        } catch (IOException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    /*
    Funcion para crear el Excel
    */
    private void Excel(){
        Workbook book = new XSSFWorkbook();
        Sheet sheet = book.createSheet("Reporte");
 
        try {
            InputStream is = new FileInputStream("C:/Users/User/Documents/NetBeansProjects/ServicioS/build/classes/Img/logo.jpg");
            byte[] bytes = IOUtils.toByteArray(is);
            int imgIndex = book.addPicture(bytes, Workbook.PICTURE_TYPE_JPEG);
            is.close();
 
            CreationHelper help = book.getCreationHelper();
            Drawing draw = sheet.createDrawingPatriarch();
 
            ClientAnchor anchor = help.createClientAnchor();
            anchor.setCol1(0);
            anchor.setRow1(1);
            Picture pict = draw.createPicture(anchor, imgIndex);
            pict.resize(1, 3);
 
            CellStyle tituloEstilo = book.createCellStyle();
            tituloEstilo.setAlignment(HorizontalAlignment.CENTER);
            tituloEstilo.setVerticalAlignment(VerticalAlignment.CENTER);
            Row filaTitulo = sheet.createRow(1);
            Cell celdaTitulo = filaTitulo.createCell(1);
            celdaTitulo.setCellStyle(tituloEstilo);
            celdaTitulo.setCellValue("Reporte de Venta");
 
            sheet.addMergedRegion(new CellRangeAddress(1, 2, 1, 4));
 
            String[] cabecera = new String[]{"Id Venta ","CÃ³digo", "Producto", "Cantidad", "Precio"," Forma de Pago","Fecha Venta"," Hora Venta"};
 
            CellStyle headerStyle = book.createCellStyle();
            headerStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());
            headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            headerStyle.setBorderBottom(BorderStyle.THIN);
            headerStyle.setBorderLeft(BorderStyle.THIN);
            headerStyle.setBorderRight(BorderStyle.THIN);
            headerStyle.setBorderBottom(BorderStyle.THIN);
            Row filaEncabezados = sheet.createRow(4);
 
            for (int i = 0; i < cabecera.length; i++) {
                Cell celdaEnzabezado = filaEncabezados.createCell(i);
                celdaEnzabezado.setCellStyle(headerStyle);
                celdaEnzabezado.setCellValue(cabecera[i]);
            }
            
            String a = ((JTextField)Rinicio.getDateEditor().getUiComponent()).getText();
            String b = ((JTextField)Rfin.getDateEditor().getUiComponent()).getText();
            
            Connection con = null;
            con = getConection();    
            String sql = "SELECT* FROM Ventas WHERE Fecha_Venta BETWEEN ? AND ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, a);
            ps.setString(2, b);
            rs = ps.executeQuery();
 
            int numFilaDatos = 5;
 
            CellStyle datosEstilo = book.createCellStyle();
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            datosEstilo.setBorderLeft(BorderStyle.THIN);
            datosEstilo.setBorderRight(BorderStyle.THIN);
            datosEstilo.setBorderBottom(BorderStyle.THIN);
 
            int numCol = rs.getMetaData().getColumnCount();
 
            while (rs.next()) {
                Row filaDatos = sheet.createRow(numFilaDatos);
                for (int c = 0; c < numCol; c++) {
                    Cell CeldaDatos = filaDatos.createCell(c);
                    CeldaDatos.setCellStyle(datosEstilo);
                    CeldaDatos.setCellValue(rs.getString(c + 1));
                }
                numFilaDatos++;
            }
            sheet.autoSizeColumn(0);
            sheet.autoSizeColumn(1);
            sheet.autoSizeColumn(2);
            sheet.autoSizeColumn(3);
            sheet.autoSizeColumn(4);
            
            sheet.setZoom(100);
            String fileName = "productos";
            String home = System.getProperty("user.home");
            File file = new File(home + "/Desktop/" + fileName + ".xlsx");
            FileOutputStream fileOut = new FileOutputStream(file);
            book.write(fileOut);
            fileOut.close();
            JOptionPane.showMessageDialog(null, "Reporte Generado");
 
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Sistema.class.getName()).log(Level.SEVERE, null, ex);
        } 
 
    }
}

